/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a role-based access control model, primarily restricting access to survey data to authenticated administrators.
 *
 * Data Structure:
 * - All survey data is stored in the `/surveys/{docId}` collection.
 *
 * Key Security Decisions:
 * - Only authenticated administrators are allowed to read (get and list) survey data.
 * - All write operations (create, update, delete) are denied to prevent unauthorized modification of survey data.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to the /surveys collection, restricting read access to authenticated administrators only and denying all write operations.
     * @path /surveys/{docId}
     * @allow (get, list) if the user is an authenticated administrator (e.g., has a specific email).
     * @deny (create, update, delete) Always, as regular users should not be able to modify survey data.
     * @principle Enforces role-based access control for survey data.
     */
    match /surveys/{docId} {
      allow get: if isAdmin();
      allow list: if isAdmin();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    // WARNING: Replace with your actual admin check (e.g., email allowlist, custom claims)
    function isAdmin() {
        return isSignedIn() && request.auth.token.email == 'admin@example.com';
    }
  }
}