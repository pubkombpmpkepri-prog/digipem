/**
 * @fileoverview Firestore Security Rules for the survey application.
 *
 * Core Philosophy:
 * This ruleset enforces a role-based access control model, specifically an admin-only access for reading surveys data.
 *
 * Data Structure:
 * All survey data is stored in the top-level `/surveys/{docId}` collection.
 *
 * Key Security Decisions:
 * - Only admins are authorized to read survey data (get, list).
 * - Any authenticated user can create survey data.
 * - Survey updates or deletes are disallowed.
 *
 * Denormalization for Authorization: N/A.  No denormalization needed due to admin-based authorization.
 * Structural Segregation: N/A. Single collection.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants read access to admins and allows any authenticated user to create survey documents. Updates and deletes are disallowed.
     * @path /surveys/{docId}
     * @allow (create) User with any valid auth can create survey data.
     * @deny (get, list) Non-admin users cannot read survey data.
     * @deny (update, delete) No user can update or delete survey data.
     * @principle Restricts read access to admins while allowing any authenticated user to create survey documents.
     */
    match /surveys/{docId} {
      // Admins can read.
      allow get, list: if isAdmin();

      // Any authenticated user can create.
      allow create: if isSignedIn();

      // No one can update or delete.
      allow update, delete: if false;
    }

    // ---- Helper functions ----
    function isSignedIn() {
      return request.auth != null;
    }

    // Check if the user is in the allowed list of admin email addresses.
    function isAdmin() {
      return isSignedIn() && (request.auth.token.email in ["admin@example.com"]);
    }
  }
}