/**
 * @fileOverview Firestore Security Rules for the survey application.
 *
 * Core Philosophy:
 * This ruleset enforces a role-based access control model. Only authenticated administrators are granted read and write access to survey data.
 *
 * Data Structure:
 * All survey data is stored in the top-level `/surveys/{docId}` collection.
 *
 * Key Security Decisions:
 * - Only authenticated administrators can read or write survey data.
 * - Data validation is relaxed in this prototyping phase.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants admin read and write access to the /surveys collection.
     * @path /surveys/{docId}
     * @allow (read, write) If the user is an authenticated administrator.
     * @deny (read, write) If the user is not an authenticated administrator.
     * @principle Enforces role-based access control for survey data.
     */
    match /surveys/{docId} {
      allow get, list: if isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // --- Helper Functions ---

    /**
     * Checks if the user is an authenticated admin.
     * @return {boolean} True if the user is an admin, false otherwise.
     */
    function isAdmin() {
      return isSignedIn() && request.auth.token.email in ["admin@example.com"];
    }

    /**
     * Checks if the user is signed in.
     * @return {boolean} True if the user is signed in, false otherwise.
     */
    function isSignedIn() {
      return request.auth != null;
    }
  }
}