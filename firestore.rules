/**
 * @fileOverview Firestore Security Rules for the Survey application.
 *
 * Core Philosophy:
 * This ruleset enforces a role-based security model where only authenticated admins are allowed to read surveys
 * while all users (signed in or not) are allowed to create surveys.
 *
 * Data Structure:
 * All survey data is stored in the top-level `/surveys/{surveyId}` collection.
 *
 * Key Security Decisions:
 * - No user listing is allowed.
 * - Read access to surveys is restricted to authenticated admin users only.
 * - Survey creation is allowed for all users (signed in or not).
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to the /surveys/{surveyId} collection, restricting read access to authenticated admin users only
     *   and allowing all users to create new survey documents.
     * @path /surveys/{docId}
     * @allow (create) - Any user can create a survey document with valid data.
     *   Example: An unauthenticated user can create a new survey.
     * @deny (get, list) - Non-admin users cannot read survey data.
     *   Example: A regular authenticated user attempts to read all surveys.
     * @principle Enforces role-based access control for reads and allows open access for creates.
     */
    match /surveys/{surveyId} {
      // Anyone can create a survey
      allow create: if true;

      // Only authenticated admins can read surveys
      allow get: if isAdmin();
      allow list: if isAdmin();

      // No updates or deletes allowed
      allow update: if false;
      allow delete: if false;
    }

    // Helper function to check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is an admin (based on email)
    function isAdmin() {
      return isSignedIn() && request.auth.token.email in ["admin@example.com"];
    }
  }
}