/**
 * @fileoverview Firestore Security Rules for the survey application.
 *
 * Core Philosophy:
 * This ruleset restricts read access to the `surveys` collection to authenticated users with a specific email.
 * Write access is denied to all users.
 *
 * Data Structure:
 * The primary data is stored in the `/surveys/{docId}` collection.
 *
 * Key Security Decisions:
 * - Listing surveys is only allowed for specific users.
 * - Data validation is relaxed in this prototype to allow for rapid schema iteration.
 *
 * Denormalization for Authorization: N/A, email domain is used for authorization.
 * Structural Segregation: N/A
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants read access to the `surveys` collection only to specific authenticated users.
     * @path /databases/{database}/documents/surveys/{docId}
     * @allow (get, list) User with allowed email can read surveys.
     *     Example: User with email 'apkelana@gmail.com' can get a survey.
     * @deny (get, list) User without allowed email cannot read surveys.
     *     Example: User with email 'outsider@example.com' cannot get a survey.
     * @deny (create, update, delete) No user can create, update, or delete surveys.
     * @principle Restricts read access to authorized users and prohibits any write access.
     */
    match /surveys/{docId} {
      allow get: if isSignedIn() && request.auth.token.email == 'apkelana@gmail.com';
      allow list: if isSignedIn() && request.auth.token.email == 'apkelana@gmail.com';

      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }

  // Helper function to check if a user is signed in.
  function isSignedIn() {
    return request.auth != null;
  }
}