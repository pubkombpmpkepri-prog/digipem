/**
 * @fileOverview Firestore Security Rules for the survey app.
 *
 * Core Philosophy:
 * This ruleset restricts listing surveys to authenticated users with the email "admin@example.com", effectively providing administrator-level access.  All other users are denied list access. Get access is intentionally left open to facilitate debugging. Write access is denied for all users to prevent data modification during this prototyping phase.
 *
 * Data Structure:
 * Data is stored in a flat `/surveys/{surveyId}` collection.
 *
 * Key Security Decisions:
 * - Listing surveys is restricted to an admin user (email address allowlist).
 * - All write access is denied.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Restricts access to the /surveys collection. Only allows authenticated admin users to list surveys.
     * @path /surveys/{surveyId}
     * @allow (list) User with email "admin@example.com" can list surveys.
     * @deny (list) Any other user attempting to list surveys.
     * @deny (create, update, delete) All users are denied write access.
     * @principle Restricts access to the surveys collection to admin users.
     */
    match /surveys/{surveyId} {
      allow get: if true;
      allow list: if isAdmin();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    // Helper function to check if the user is an admin based on their email.
    function isAdmin() {
      return isSignedIn() && request.auth.token.email == "admin@example.com";
    }

    // Helper function to check if the user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }
  }
}